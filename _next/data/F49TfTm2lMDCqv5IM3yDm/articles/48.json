{"pageProps":{"issue":{"body":"","bodyHTML":"","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48/comments","created_at":"2022-07-01T11:15:13Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/48","id":1291273280,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5M90RA","number":48,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48/timeline","title":"2022-07-01","updated_at":"2022-07-01T11:15:13Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"# TypeScriptでGoogle Apps Scriptを書こう！\n\n## とりあえずスクラップ\n\nhttps://zenn.dev/kyo9bo/articles/ffc0d8b8076052\n\nhttps://zenn.dev/fillz_noh/articles/c6a3a504b0cefc\n\nhttps://zenn.dev/phi/articles/google-apps-script-snippets\n\nhttps://zenn.dev/offers/articles/20220616-google-app-script-technique\n\nhttps://zenn.dev/daria_nicht/articles/41c39bb4413db8\n\nhttps://zenn.dev/kkenjii/articles/gas-clasp-usage\n\nclaspを使って、TypeScriptでGASを書くのが良さそう。\n- 自動化の選択肢を広げられると良い。\n- TypeScriptの練習に使えると良さそう\n\n## claspを使ってみる\n\nhttps://github.com/google/clasp\n\n### インストール\n\n```bash\n$ npm i @google/clasp -g\n```\n\n### ログインする\n\n```bash\n$ clasp login\nLogging in globally…\n🔑 Authorize clasp by visiting this url:\nhttps://accounts.google.com/o/oauth2/v2/auth?access_type=offline&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.deployments%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.projects%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.webapp.deploy%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.metadata.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fservice.management%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Flogging.read%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform&response_type=code&client_id=1072944905499-vm2v2i5dvn0a0d2o4ca36i1vge8cvbn0.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A65472\n\nAuthorization successful.\n\nDefault credentials saved to: /Users/tadokoroikuma/.clasprc.json.\n```\n\n### claspでTypeScriptを使えるようにする\n\nhttps://github.com/google/clasp/blob/master/docs/typescript.md\n\n```bash\n$ mkdir hello-world-clasp\n$ cd hello-world-clasp\n$ npm i @types/google-apps-script\n$ vim tsconfig.json\n````\n\n```json\n{\n  \"compilerOptions\": {\n    \"lib\": [\"es2022\"],\n    \"experimentalDecorators\": true\n  }\n}\n```\n\n### プロジェクトの作成\n\n```\n❯ clasp create --help\nUsage: clasp create [options]\n\nCreate a script\n\nOptions:\n  --type <type>        Creates a new Apps Script project attached to a new Document, Spreadsheet, Presentation, Form, or as a standalone script, web app, or API.\n  --title <title>      The project title.\n  --parentId <id>      A project parent Id.\n  --rootDir <rootDir>  Local root directory in which clasp will store your project files.\n  -h, --help           display help for command\n\n$ clasp create --title \"Hello World\" --type standalone\n\n$ ls -la\n# appscript.jsonが作成される\n```\n\nTimezoneがAmerica/NewYorkなので、Asia/Tokyoに変更する\n\n```json\n{\n  \"timeZone\": \"Asia/Tokyo\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}\n~\n```\n\n### Hello World\n\n```typescript:hello.ts\nconst greeter = (person: string) => {\n  return `Hello, ${person}!`;\n}\n\nconst testGreeter() {\n  const user = 'ikuma';\n  Logger.log(greeter(user))\n}\n```\n\nデプロイする\n\n```bash\n❯ clasp push\n? Manifest file has been updated. Do you want to push and\noverwrite? Yes\n└─ appsscript.json\n└─ hello.ts\nPushed 2 files.\n```\n\n正直何を上書きしたのかはわからない\n\n\n```bash\n$ clasp open\n```\n\nこれでウェブのエディタが開く。`hello.gs`が表示された。\n\n```javascript\n// Compiled using hello-world-clasp 1.0.0 (TypeScript 4.7.4)\nvar greeter = function (person) {\n    return \"Hello, \".concat(person, \"!\");\n};\nvar testGreeter;\n(function () {\n    var user = 'ikuma';\n    Logger.log(greeter(user));\n});\n```\n\nTypeScriptも最新っぽいね\n\nLogger.logが表示されない→testGreeterが関数じゃなかった\n\n```typescript:hello.ts\nconst greeter = (person: string) => {\n  return `Hello, ${person}!`;\n}\n\nconst testGreeter = ():void => {\n  const user = 'ikuma';\n  Logger.log(greeter(user))\n}\n```\n\n","bodyHTML":"<h1 id=\"typescript%E3%81%A7google-apps-script%E3%82%92%E6%9B%B8%E3%81%93%E3%81%86%EF%BC%81\"><a class=\"header-anchor-link\" href=\"#typescript%E3%81%A7google-apps-script%E3%82%92%E6%9B%B8%E3%81%93%E3%81%86%EF%BC%81\" aria-hidden=\"true\" rel=\"nofollow\"></a> TypeScriptでGoogle Apps Scriptを書こう！</h1>\n<h2 id=\"%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%83%E3%83%97\"><a class=\"header-anchor-link\" href=\"#%E3%81%A8%E3%82%8A%E3%81%82%E3%81%88%E3%81%9A%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%83%E3%83%97\" aria-hidden=\"true\" rel=\"nofollow\"></a> とりあえずスクラップ</h2>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fkyo9bo%2Farticles%2Fffc0d8b8076052\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/kyo9bo/articles/ffc0d8b8076052\" style=\"display: none\">https://zenn.dev/kyo9bo/articles/ffc0d8b8076052</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Ffillz_noh%2Farticles%2Fc6a3a504b0cefc\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/fillz_noh/articles/c6a3a504b0cefc\" style=\"display: none\">https://zenn.dev/fillz_noh/articles/c6a3a504b0cefc</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fphi%2Farticles%2Fgoogle-apps-script-snippets\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/phi/articles/google-apps-script-snippets\" style=\"display: none\">https://zenn.dev/phi/articles/google-apps-script-snippets</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Foffers%2Farticles%2F20220616-google-app-script-technique\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/offers/articles/20220616-google-app-script-technique\" style=\"display: none\">https://zenn.dev/offers/articles/20220616-google-app-script-technique</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fdaria_nicht%2Farticles%2F41c39bb4413db8\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/daria_nicht/articles/41c39bb4413db8\" style=\"display: none\">https://zenn.dev/daria_nicht/articles/41c39bb4413db8</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fkkenjii%2Farticles%2Fgas-clasp-usage\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/kkenjii/articles/gas-clasp-usage\" style=\"display: none\">https://zenn.dev/kkenjii/articles/gas-clasp-usage</a></p>\n<p>claspを使って、TypeScriptでGASを書くのが良さそう。</p>\n<ul>\n<li>自動化の選択肢を広げられると良い。</li>\n<li>TypeScriptの練習に使えると良さそう</li>\n</ul>\n<h2 id=\"clasp%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#clasp%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> claspを使ってみる</h2>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fclasp\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/google/clasp\" style=\"display: none\" rel=\"nofollow\">https://github.com/google/clasp</a></p>\n<h3 id=\"%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><a class=\"header-anchor-link\" href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-hidden=\"true\" rel=\"nofollow\"></a> インストール</h3>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i @google/clasp <span class=\"token parameter variable\">-g</span>\n</code></pre></div><h3 id=\"%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> ログインする</h3>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ clasp login\nLogging <span class=\"token keyword\">in</span> globally…\n🔑 Authorize clasp by visiting this url:\nhttps://accounts.google.com/o/oauth2/v2/auth?access_type<span class=\"token operator\">=</span>offline<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">scope</span><span class=\"token operator\">=</span>https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.deployments%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.projects%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fscript.webapp.deploy%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.metadata.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fservice.management%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Flogging.read%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">response_type</span><span class=\"token operator\">=</span>code<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">client_id</span><span class=\"token operator\">=</span><span class=\"token number\">1072944905499</span>-vm2v2i5dvn0a0d2o4ca36i1vge8cvbn0.apps.googleusercontent.com<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">redirect_uri</span><span class=\"token operator\">=</span>http%3A%2F%2Flocalhost%3A65472\n\nAuthorization successful.\n\nDefault credentials saved to: /Users/tadokoroikuma/.clasprc.json.\n</code></pre></div><h3 id=\"clasp%E3%81%A7typescript%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#clasp%E3%81%A7typescript%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> claspでTypeScriptを使えるようにする</h3>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fclasp%2Fblob%2Fmaster%2Fdocs%2Ftypescript.md\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/google/clasp/blob/master/docs/typescript.md\" style=\"display: none\" rel=\"nofollow\">https://github.com/google/clasp/blob/master/docs/typescript.md</a></p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> hello-world-clasp\n$ <span class=\"token builtin class-name\">cd</span> hello-world-clasp\n$ <span class=\"token function\">npm</span> i @types/google-apps-script\n$ <span class=\"token function\">vim</span> tsconfig.json\n</code></pre></div><div class=\"code-block-container\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2022\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><h3 id=\"%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\"><a class=\"header-anchor-link\" href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\" aria-hidden=\"true\" rel=\"nofollow\"></a> プロジェクトの作成</h3>\n<div class=\"code-block-container\"><pre class=\"\"><code class=\"\">❯ clasp create --help\nUsage: clasp create [options]\n\nCreate a script\n\nOptions:\n  --type &lt;type&gt;        Creates a new Apps Script project attached to a new Document, Spreadsheet, Presentation, Form, or as a standalone script, web app, or API.\n  --title &lt;title&gt;      The project title.\n  --parentId &lt;id&gt;      A project parent Id.\n  --rootDir &lt;rootDir&gt;  Local root directory in which clasp will store your project files.\n  -h, --help           display help for command\n\n$ clasp create --title &quot;Hello World&quot; --type standalone\n\n$ ls -la\n# appscript.jsonが作成される\n</code></pre></div><p>TimezoneがAmerica/NewYorkなので、Asia/Tokyoに変更する</p>\n<div class=\"code-block-container\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"timeZone\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Asia/Tokyo\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exceptionLogging\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"STACKDRIVER\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"runtimeVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"V8\"</span>\n<span class=\"token punctuation\">}</span>\n~\n</code></pre></div><h3 id=\"hello-world\"><a class=\"header-anchor-link\" href=\"#hello-world\" aria-hidden=\"true\" rel=\"nofollow\"></a> Hello World</h3>\n<div class=\"code-block-container\"><div class=\"code-block-filename-container\"><span class=\"code-block-filename\">hello.ts</span></div><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">greeter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>person<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function\">testGreeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'ikuma'</span><span class=\"token punctuation\">;</span>\n  Logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><p>デプロイする</p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">❯ clasp push\n? Manifest <span class=\"token function\">file</span> has been updated. Do you want to push and\noverwrite? Yes\n└─ appsscript.json\n└─ hello.ts\nPushed <span class=\"token number\">2</span> files.\n</code></pre></div><p>正直何を上書きしたのかはわからない</p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ clasp <span class=\"token function\">open</span>\n</code></pre></div><p>これでウェブのエディタが開く。<code>hello.gs</code>が表示された。</p>\n<div class=\"code-block-container\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Compiled using hello-world-clasp 1.0.0 (TypeScript 4.7.4)</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">greeter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">person</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello, \"</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> testGreeter<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'ikuma'</span><span class=\"token punctuation\">;</span>\n    Logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><p>TypeScriptも最新っぽいね</p>\n<p>Logger.logが表示されない→testGreeterが関数じゃなかった</p>\n<div class=\"code-block-container\"><div class=\"code-block-filename-container\"><span class=\"code-block-filename\">hello.ts</span></div><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">greeter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>person<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> testGreeter <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token string\">'ikuma'</span><span class=\"token punctuation\">;</span>\n  Logger<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greeter</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","author_association":"OWNER","created_at":"2022-07-01T12:29:12Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/48#issuecomment-1172294948","id":1172294948,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48","node_id":"IC_kwDOHWTPVs5F380k","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172294948/reactions"},"updated_at":"2022-07-01T12:29:12Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172294948","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"- テンプレートリポジトリが作成できると良さそう\n- CodeSpacesでできるともっと良さそう\n\nhttps://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210\n\nwebpackでできるならViteもできる？\n\nhttps://www.npmjs.com/package/gas-webpack-plugin\n\nこれが必要みたい。GASで実行可能な関数がトップレベル関数だけなので、このプラグインがバンドルするタイミングで実行対象の関数をトップレベルに配置するという仕組み。\n\n実行可能というのはGASのエディタで実行の選択肢に出てくる関数っぽいので、private的な役割だったら大丈夫みたい。\n\nhttps://qiita.com/mahaker/items/7beb8aaf357fb3c32144\n\nこんなの見つけた。これはesbuildの例。\n結局のところ、グローバルオブジェクトに関数宣言文で関数を定義できればwebpack縛りである必要はない。\n\nhttps://github.com/fossamagna/gas-entry-generator\n\nこれを使えばどうも関数宣言文を作成できるみたいで、これを組み込んだプラグインを作ればViteでもチャンスはあるみたい。\n\n仕組み的にはgas-entry-generatorを動かして、その生成物 + ビルド結果を単純に合成しているみたい。\n","bodyHTML":"<ul>\n<li>テンプレートリポジトリが作成できると良さそう</li>\n<li>CodeSpacesでできるともっと良さそう</li>\n</ul>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fryo_kawamata%2Farticles%2F2c6cc4e7c27210\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210\" style=\"display: none\">https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210</a></p>\n<p>webpackでできるならViteもできる？</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fgas-webpack-plugin\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://www.npmjs.com/package/gas-webpack-plugin\" style=\"display: none\" rel=\"nofollow\">https://www.npmjs.com/package/gas-webpack-plugin</a></p>\n<p>これが必要みたい。GASで実行可能な関数がトップレベル関数だけなので、このプラグインがバンドルするタイミングで実行対象の関数をトップレベルに配置するという仕組み。</p>\n<p>実行可能というのはGASのエディタで実行の選択肢に出てくる関数っぽいので、private的な役割だったら大丈夫みたい。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fqiita.com%2Fmahaker%2Fitems%2F7beb8aaf357fb3c32144\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://qiita.com/mahaker/items/7beb8aaf357fb3c32144\" style=\"display: none\" rel=\"nofollow\">https://qiita.com/mahaker/items/7beb8aaf357fb3c32144</a></p>\n<p>こんなの見つけた。これはesbuildの例。<br>\n結局のところ、グローバルオブジェクトに関数宣言文で関数を定義できればwebpack縛りである必要はない。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2Ffossamagna%2Fgas-entry-generator\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/fossamagna/gas-entry-generator\" style=\"display: none\" rel=\"nofollow\">https://github.com/fossamagna/gas-entry-generator</a></p>\n<p>これを使えばどうも関数宣言文を作成できるみたいで、これを組み込んだプラグインを作ればViteでもチャンスはあるみたい。</p>\n<p>仕組み的にはgas-entry-generatorを動かして、その生成物 + ビルド結果を単純に合成しているみたい。</p>\n","author_association":"OWNER","created_at":"2022-07-01T13:49:08Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/48#issuecomment-1172370110","id":1172370110,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48","node_id":"IC_kwDOHWTPVs5F4PK-","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172370110/reactions"},"updated_at":"2022-07-01T13:49:08Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172370110","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"まずはwebpackのテンプレートリポジトリをコピーして使ってみて、使い勝手を確かめる\n\nhttps://github.com/IkumaTadokoro/gas-webpack-sample\n\nう〜ん、build落ちちゃうな。これは自分で一から作っていった方が良さそう。\n","bodyHTML":"<p>まずはwebpackのテンプレートリポジトリをコピーして使ってみて、使い勝手を確かめる</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2FIkumaTadokoro%2Fgas-webpack-sample\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/IkumaTadokoro/gas-webpack-sample\" style=\"display: none\" rel=\"nofollow\">https://github.com/IkumaTadokoro/gas-webpack-sample</a></p>\n<p>う〜ん、build落ちちゃうな。これは自分で一から作っていった方が良さそう。</p>\n","author_association":"OWNER","created_at":"2022-07-01T13:59:05Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/48#issuecomment-1172379544","id":1172379544,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48","node_id":"IC_kwDOHWTPVs5F4ReY","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172379544/reactions"},"updated_at":"2022-07-01T13:59:05Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172379544","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"esbuildを使ってpjを作成してみる\n\nhttps://engineering.mercari.com/blog/entry/20211215-operation-tool-coupon/\n\nhttps://aloerina01.github.io/blog/2021-09-15-1\n\n```bash\n$ mkdir esbuild-gas-sample\n$ npm install -D esbuild\n$ npm install -D esbuild-gas-plugin\n```\n\nたぶんなんか適当に作ればGASっぽい感じになると思われるので、やっている。\n\n```bash\n$ mkdir src\n$ mkdir dist\n$ touch src/index.ts\n$ touch bin/build\n\n# index.tsとbin/buildを修正\n\n$ chmod u+x bin/build\n$ bin/build\n```\n\n```bash\n✘ [ERROR] Expected \";\" but found \"add\"\n\n    src/utils.ts:1:5:\n      1 │ onst add = (n1: number, n2: number): number =...\n        │      ~~~\n        ╵      ;\n\n1 error\n✘ [ERROR] [plugin gas-plugin] ENOENT: no such file or directory, open 'dist/bundle.js'\n\n    /Users/tadokoroikuma/src/github.com/IkumaTadokoro/esbuild-gas-sample/node_modules/esbuild-gas-plugin/dist/index.js:7:25:\n      7 │ ...  const outfile = fs.readFileSync(build.in...\n        ╵                         ^\n```\n\nちょっと修正する。`onst`になってた。\n\n```\n$ bin/build\n```\n\nえ！早すぎでは！！\n\n---\n\nここからclaspを使ってpushできるようにしていく。\n\n```bash\n$ touch .clasp.json\n```\n\n```json\n\"scripts\": {\n  \"build\": \"bin/build\",\n  \"deploy\": \"bin/build && clasp push\",\n}\n```\n\nあ、appscripts.jsonがないって言われている。これどこに追加すればいいのかな？とりあえずsrcにおいてみる、多分ダメ。\n\n```bash\nENOENT: no such file or directory, open 'dist/appsscript.json'\n```\n\n一旦、直接distに配置するappsscript.json。m名前間違いやすい\n\n```\nCould not find script.\nDid you provide the correct scriptId?\nAre you logged in to the correct account with the script?\n```\n\nあれ、もしかして.clasp.jsonも移動する必要がある？\nそういうことじゃないみたい。移動してもだめだった。\n\nなんかIDが違ったみたい。修正したらとりあえずdeployはできたけど、エディタでみると何もなかった...。\n\nう〜ん、何もデプロイされていないなあ\n\nとりあえずできた。\n\n- global登録は自分でやらないとダメ。グローバルに実行するべき関数がトップにないとエラーになる\n- clasp pushしてみても、エディタは変わっていない。でも実行結果は変わっている。更新しても同じで、実行するとローカルのコードを読んでいる。\n- クラシックエディタに一度切り替えたら、ちゃんと反映された。どうもpushがオンラインエディタに反映されないのは既知の問題らしい。\n\n\n","bodyHTML":"<p>esbuildを使ってpjを作成してみる</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fengineering.mercari.com%2Fblog%2Fentry%2F20211215-operation-tool-coupon%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://engineering.mercari.com/blog/entry/20211215-operation-tool-coupon/\" style=\"display: none\" rel=\"nofollow\">https://engineering.mercari.com/blog/entry/20211215-operation-tool-coupon/</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Faloerina01.github.io%2Fblog%2F2021-09-15-1\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://aloerina01.github.io/blog/2021-09-15-1\" style=\"display: none\" rel=\"nofollow\">https://aloerina01.github.io/blog/2021-09-15-1</a></p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> esbuild-gas-sample\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-D</span> esbuild\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-D</span> esbuild-gas-plugin\n</code></pre></div><p>たぶんなんか適当に作ればGASっぽい感じになると思われるので、やっている。</p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> src\n$ <span class=\"token function\">mkdir</span> dist\n$ <span class=\"token function\">touch</span> src/index.ts\n$ <span class=\"token function\">touch</span> bin/build\n\n<span class=\"token comment\"># index.tsとbin/buildを修正</span>\n\n$ <span class=\"token function\">chmod</span> u+x bin/build\n$ bin/build\n</code></pre></div><div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">✘ <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> Expected <span class=\"token string\">\";\"</span> but found <span class=\"token string\">\"add\"</span>\n\n    src/utils.ts:1:5:\n      <span class=\"token number\">1</span> │ onst <span class=\"token function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n1: number, n2: number<span class=\"token punctuation\">)</span>: number <span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>.\n        │      ~~~\n        ╵      <span class=\"token punctuation\">;</span>\n\n<span class=\"token number\">1</span> error\n✘ <span class=\"token punctuation\">[</span>ERROR<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>plugin gas-plugin<span class=\"token punctuation\">]</span> ENOENT: no such <span class=\"token function\">file</span> or directory, <span class=\"token function\">open</span> <span class=\"token string\">'dist/bundle.js'</span>\n\n    /Users/tadokoroikuma/src/github.com/IkumaTadokoro/esbuild-gas-sample/node_modules/esbuild-gas-plugin/dist/index.js:7:25:\n      <span class=\"token number\">7</span> │ <span class=\"token punctuation\">..</span>.  const outfile <span class=\"token operator\">=</span> fs.readFileSync<span class=\"token punctuation\">(</span>build.in<span class=\"token punctuation\">..</span>.\n        ╵                         ^\n</code></pre></div><p>ちょっと修正する。<code>onst</code>になってた。</p>\n<div class=\"code-block-container\"><pre class=\"\"><code class=\"\">$ bin/build\n</code></pre></div><p>え！早すぎでは！！</p>\n<hr>\n<p>ここからclaspを使ってpushできるようにしていく。</p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> .clasp.json\n</code></pre></div><div class=\"code-block-container\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bin/build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bin/build &amp;&amp; clasp push\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><p>あ、appscripts.jsonがないって言われている。これどこに追加すればいいのかな？とりあえずsrcにおいてみる、多分ダメ。</p>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">ENOENT: no such <span class=\"token function\">file</span> or directory, <span class=\"token function\">open</span> <span class=\"token string\">'dist/appsscript.json'</span>\n</code></pre></div><p>一旦、直接distに配置するappsscript.json。m名前間違いやすい</p>\n<div class=\"code-block-container\"><pre class=\"\"><code class=\"\">Could not find script.\nDid you provide the correct scriptId?\nAre you logged in to the correct account with the script?\n</code></pre></div><p>あれ、もしかして.clasp.jsonも移動する必要がある？<br>\nそういうことじゃないみたい。移動してもだめだった。</p>\n<p>なんかIDが違ったみたい。修正したらとりあえずdeployはできたけど、エディタでみると何もなかった...。</p>\n<p>う〜ん、何もデプロイされていないなあ</p>\n<p>とりあえずできた。</p>\n<ul>\n<li>global登録は自分でやらないとダメ。グローバルに実行するべき関数がトップにないとエラーになる</li>\n<li>clasp pushしてみても、エディタは変わっていない。でも実行結果は変わっている。更新しても同じで、実行するとローカルのコードを読んでいる。</li>\n<li>クラシックエディタに一度切り替えたら、ちゃんと反映された。どうもpushがオンラインエディタに反映されないのは既知の問題らしい。</li>\n</ul>\n","author_association":"OWNER","created_at":"2022-07-01T15:07:57Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/48#issuecomment-1172445688","id":1172445688,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/48","node_id":"IC_kwDOHWTPVs5F4hn4","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172445688/reactions"},"updated_at":"2022-07-01T15:07:57Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1172445688","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}