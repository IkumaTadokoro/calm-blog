{"pageProps":{"issue":{"body":"","bodyHTML":"","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71/comments","created_at":"2022-08-22T22:46:40Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/71","id":1347083019,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5QStsL","number":71,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71/timeline","title":"2022-08-23","updated_at":"2022-08-22T22:46:40Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"多少ポインタ力が上がったところで、pdlgenのソースコードに戻ってきた。各DomainごとにGoのソースコードを作成する部分のリーディングである。\n\n```go\nfor _, d := range domains {\n\tpkgName := genutil.PackageName(d)\n\tpkgOut := filepath.Join(pkgName, pkgName+\".go\")\n```\n\nrangeの書き方忘れた。\n\nhttps://go-tour-jp.appspot.com/moretypes/16\n\nこの場合は、`domains`を反復し、反復ごとにindexとインデックスの場所の要素のコピーを返す（これって値渡しってこと？）\n\n`domains`はこの関数`NewGoGenerator`の引数として渡されている\n\n```go\nfunc NewGoGenerator(domains []*pdl.Domain, basePkg string) (Emitter, error) {\n```\n\nおお、一昨日より解像度高いぞ。`domains`は`pdl.Domain`のポインタのスライス（言葉を正しく使えない）。\n\n概要としてはDomainを渡して、それを元に定義ファイルを作成している感じ。\n\nDomainってスクショとか、Pageとかのことだと思っているんだけど、間違っていると理解が厳しいので、一回PDLを確認する。\n\nというかそもそもPDLって拡張子の事知らないから調べよう。\n\nhttps://ja.wikipedia.org/wiki/%E3%83%9A%E3%83%BC%E3%82%B8%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E\n\n> ページ記述言語（ページきじゅつげんご、英: page description language、略称PDL）は、プリンターに対して描画を指示するためのプログラミング言語である。\n\nなんで、Googleはこれで記述することを選んだんだろう（そういう意味ではJSONもそうかもだけど、ブラウザがJSと仲良いからわからんでもない）\n\nhttps://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl\n\nあ、なんか違うっぽいぞ。PDLはChrome Devtools Protocolのための独自記述の可能性があるな。\n\nとりあえずDomainに関する認識はここで記述されている通り正しい。\n\nhttps://chromedevtools.github.io/devtools-protocol/\n\nRust製のPDLパーサー\n\nhttps://github.com/flier/rust-pdl\n\n読み方ぷどる？って読むっぽい？\n\nhttps://fileinfo.com/extension/pdl\n\nPerl Data LanguageFileってのもあるな。\n","bodyHTML":"<p>多少ポインタ力が上がったところで、pdlgenのソースコードに戻ってきた。各DomainごとにGoのソースコードを作成する部分のリーディングである。</p>\n<div class=\"code-block-container\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> d <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> domains <span class=\"token punctuation\">{</span>\n\tpkgName <span class=\"token operator\">:=</span> genutil<span class=\"token punctuation\">.</span><span class=\"token function\">PackageName</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n\tpkgOut <span class=\"token operator\">:=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>pkgName<span class=\"token punctuation\">,</span> pkgName<span class=\"token operator\">+</span><span class=\"token string\">\".go\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div><p>rangeの書き方忘れた。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgo-tour-jp.appspot.com%2Fmoretypes%2F16\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://go-tour-jp.appspot.com/moretypes/16\" style=\"display: none\" rel=\"nofollow\">https://go-tour-jp.appspot.com/moretypes/16</a></p>\n<p>この場合は、<code>domains</code>を反復し、反復ごとにindexとインデックスの場所の要素のコピーを返す（これって値渡しってこと？）</p>\n<p><code>domains</code>はこの関数<code>NewGoGenerator</code>の引数として渡されている</p>\n<div class=\"code-block-container\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">NewGoGenerator</span><span class=\"token punctuation\">(</span>domains <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>pdl<span class=\"token punctuation\">.</span>Domain<span class=\"token punctuation\">,</span> basePkg <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>Emitter<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</code></pre></div><p>おお、一昨日より解像度高いぞ。<code>domains</code>は<code>pdl.Domain</code>のポインタのスライス（言葉を正しく使えない）。</p>\n<p>概要としてはDomainを渡して、それを元に定義ファイルを作成している感じ。</p>\n<p>Domainってスクショとか、Pageとかのことだと思っているんだけど、間違っていると理解が厳しいので、一回PDLを確認する。</p>\n<p>というかそもそもPDLって拡張子の事知らないから調べよう。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fja.wikipedia.org%2Fwiki%2F%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E8%25A8%2598%25E8%25BF%25B0%25E8%25A8%2580%25E8%25AA%259E\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://ja.wikipedia.org/wiki/%E3%83%9A%E3%83%BC%E3%82%B8%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E\" style=\"display: none\" rel=\"nofollow\">https://ja.wikipedia.org/wiki/ページ記述言語</a></p>\n<blockquote>\n<p>ページ記述言語（ページきじゅつげんご、英: page description language、略称PDL）は、プリンターに対して描画を指示するためのプログラミング言語である。</p>\n</blockquote>\n<p>なんで、Googleはこれで記述することを選んだんだろう（そういう意味ではJSONもそうかもだけど、ブラウザがJSと仲良いからわからんでもない）</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2FChromeDevTools%2Fdevtools-protocol%2Fblob%2Fmaster%2Fpdl%2Fbrowser_protocol.pdl\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl\" style=\"display: none\" rel=\"nofollow\">https://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl</a></p>\n<p>あ、なんか違うっぽいぞ。PDLはChrome Devtools Protocolのための独自記述の可能性があるな。</p>\n<p>とりあえずDomainに関する認識はここで記述されている通り正しい。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fchromedevtools.github.io%2Fdevtools-protocol%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://chromedevtools.github.io/devtools-protocol/\" style=\"display: none\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/</a></p>\n<p>Rust製のPDLパーサー</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2Fflier%2Frust-pdl\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/flier/rust-pdl\" style=\"display: none\" rel=\"nofollow\">https://github.com/flier/rust-pdl</a></p>\n<p>読み方ぷどる？って読むっぽい？</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Ffileinfo.com%2Fextension%2Fpdl\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://fileinfo.com/extension/pdl\" style=\"display: none\" rel=\"nofollow\">https://fileinfo.com/extension/pdl</a></p>\n<p>Perl Data LanguageFileってのもあるな。</p>\n","author_association":"OWNER","created_at":"2022-08-23T02:11:44Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/71#issuecomment-1223435494","id":1223435494,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71","node_id":"IC_kwDOHWTPVs5I7CTm","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1223435494/reactions"},"updated_at":"2022-08-23T02:11:44Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1223435494","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"今日中に解析できるのかなあと思いつつ、コードリーディング再開。\n\n今朝はPDLの定義を確認してたら終わってしまったので、これを確認するところから。\n\nもうPDLの言葉自体の定義には辿り着けなさそうなので、中身をみて終わりにする。\n\nhttps://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl\n\n```pdl\nexperimental domain Accessibility\n  depends on DOM\n\n  # Unique accessibility node identifier.\n  type AXNodeId extends string\n\n  # Enum of possible property types.\n  type AXValueType extends string\n    enum\n      boolean\n      tristate\n      booleanOrUndefined\n```\n\n一見yamlっぽい感じではある。\n\nhttps://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#type-AXValueType\n\nこれドキュメントのビューワーで確認できるもので、定義している内容と一致している。\n\n```pdl\n  # Disables the accessibility domain.\n  command disable\n```\n\nこれはコマンドの一例。以下のドキュメントページと対応している。\n\nhttps://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#method-disable\n\nもう一つくらいみてみる。メインどこのPage\n\n```pdl\n# Evaluates given script in every frame upon creation (before loading frame's scripts).\n  command addScriptToEvaluateOnNewDocument\n    parameters\n      string source\n      # If specified, creates an isolated world with the given name and evaluates given script in it.\n      # This world name will be used as the ExecutionContextDescription::name when the corresponding\n      # event is emitted.\n      experimental optional string worldName\n      # Specifies whether command line API should be available to the script, defaults\n      # to false.\n      experimental optional boolean includeCommandLineAPI\n    returns\n      # Identifier of the added script.\n      ScriptIdentifier identifier\n```\n\nhttps://chromedevtools.github.io/devtools-protocol/tot/Page/#method-addScriptToEvaluateOnNewDocument\n\nこれも一致している。というわけで、これがPDLでこれをパースして、Goのメソッドにしているという話である。\n","bodyHTML":"<p>今日中に解析できるのかなあと思いつつ、コードリーディング再開。</p>\n<p>今朝はPDLの定義を確認してたら終わってしまったので、これを確認するところから。</p>\n<p>もうPDLの言葉自体の定義には辿り着けなさそうなので、中身をみて終わりにする。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2FChromeDevTools%2Fdevtools-protocol%2Fblob%2Fmaster%2Fpdl%2Fbrowser_protocol.pdl\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl\" style=\"display: none\" rel=\"nofollow\">https://github.com/ChromeDevTools/devtools-protocol/blob/master/pdl/browser_protocol.pdl</a></p>\n<div class=\"code-block-container\"><pre class=\"language-pdl\"><code class=\"language-pdl\">experimental domain Accessibility\n  depends on DOM\n\n  # Unique accessibility node identifier.\n  type AXNodeId extends string\n\n  # Enum of possible property types.\n  type AXValueType extends string\n    enum\n      boolean\n      tristate\n      booleanOrUndefined\n</code></pre></div><p>一見yamlっぽい感じではある。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fchromedevtools.github.io%2Fdevtools-protocol%2Ftot%2FAccessibility%2F%23type-AXValueType\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#type-AXValueType\" style=\"display: none\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#type-AXValueType</a></p>\n<p>これドキュメントのビューワーで確認できるもので、定義している内容と一致している。</p>\n<div class=\"code-block-container\"><pre class=\"language-pdl\"><code class=\"language-pdl\">  # Disables the accessibility domain.\n  command disable\n</code></pre></div><p>これはコマンドの一例。以下のドキュメントページと対応している。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fchromedevtools.github.io%2Fdevtools-protocol%2Ftot%2FAccessibility%2F%23method-disable\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#method-disable\" style=\"display: none\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#method-disable</a></p>\n<p>もう一つくらいみてみる。メインどこのPage</p>\n<div class=\"code-block-container\"><pre class=\"language-pdl\"><code class=\"language-pdl\"># Evaluates given script in every frame upon creation (before loading frame's scripts).\n  command addScriptToEvaluateOnNewDocument\n    parameters\n      string source\n      # If specified, creates an isolated world with the given name and evaluates given script in it.\n      # This world name will be used as the ExecutionContextDescription::name when the corresponding\n      # event is emitted.\n      experimental optional string worldName\n      # Specifies whether command line API should be available to the script, defaults\n      # to false.\n      experimental optional boolean includeCommandLineAPI\n    returns\n      # Identifier of the added script.\n      ScriptIdentifier identifier\n</code></pre></div><p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fchromedevtools.github.io%2Fdevtools-protocol%2Ftot%2FPage%2F%23method-addScriptToEvaluateOnNewDocument\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-addScriptToEvaluateOnNewDocument\" style=\"display: none\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-addScriptToEvaluateOnNewDocument</a></p>\n<p>これも一致している。というわけで、これがPDLでこれをパースして、Goのメソッドにしているという話である。</p>\n","author_association":"OWNER","created_at":"2022-08-23T12:56:26Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/71#issuecomment-1224036468","id":1224036468,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/71","node_id":"IC_kwDOHWTPVs5I9VB0","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1224036468/reactions"},"updated_at":"2022-08-23T12:56:26Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1224036468","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}