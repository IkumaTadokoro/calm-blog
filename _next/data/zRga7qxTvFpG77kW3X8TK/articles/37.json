{"pageProps":{"issue":{"body":"","bodyHTML":"","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37/comments","created_at":"2022-06-19T05:19:02Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/37","id":1275957018,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5MDY8a","number":37,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37/timeline","title":"2022-06-19","updated_at":"2022-06-19T05:19:02Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"`* タスク名`で完了できないタスクを作成できる in Todoist\n","bodyHTML":"<p><code>* タスク名</code>で完了できないタスクを作成できる in Todoist</p>\n","author_association":"OWNER","created_at":"2022-06-19T06:58:18Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/37#issuecomment-1159633110","id":1159633110,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37","node_id":"IC_kwDOHWTPVs5FHpjW","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159633110/reactions"},"updated_at":"2022-06-19T06:58:18Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159633110","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"## Vue2系でのv-model\n\n### 環境作成\n\n```bash\n$ npx vue create v-model-dos\n\n? Please pick a preset:\n  Default ([Vue 3] babel, eslint)\n❯ Default ([Vue 2] babel, eslint)\n  Manually select features\n```\n\n### v-modelとは\n\n### v-modelをシンプルに使用する\n\n\n### v-modelをカスタムコンポーネントで使用する\n\n#### 構造\n\n\n\n#### 方法1：valueを受け取り、inputイベントで親のinputにデータを渡す\n\n#### 方法1-α：使用されるプロパティ名とイベントを変更する。\n\n\n#### 方法2：双方向算出プロパティを利用する\n\nなぜ`props`で受け取っている`value`をそのままカスタムコンポーネント（子）の`v-model`で指定してしまうと、Vue側から「親の値を直接変更すると、再レンダリングのたびに値が上書きされる」といった警告が出てしまう。\n\nそのため親からもらってきた値を変更するには、そのコンポーネント内で保持している変数として一度格納するか（例えば`mounted`のタイミングで、`data`に定義してある変数に格納）、後述の算出プロパティを用いる。リアクティブな値を利用してその変更に追随した処理を書くには算出プロパティがスッキリしている。\n\n算出プロパティ`computed`はプロパティ名のみを指定した場合、getter関数として定義される。リアクティブな値Aに対して、なんらかの処理を定義する事で、Aが変更されるのと同時にgetterで取得できる値も変更される。\n\n算出プロパティは明示することで、setterとしても利用することができる。\n\n```vue\ncomputed: {\n  fullName: {\n    get() {\n      return `${this.firstName} ${this.lastName}`}\n    },\n    set(newValue) {\n      const [newFirstName, newLastName] = newValue.split(' ')\n      this.firstName = newFirstName\n      this.lastName = new LastName\n    }\n  }\n}\n```\n\nこの仕組みを利用して、v-modelの値を定義する。\n\n\n```vue\n<template>\n  <div class=\"form\">\n    <label for=\"name\">{{ label }}</label>\n    <input type=\"text\" name=\"name\" v-model=\"innerValue\">\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MyInputOptions',\n  props: {\n    label: {\n      require: true,\n      type: String\n    },\n    value: {\n      require: true,\n      type: String\n    }\n  },\n  computed: {\n    innerValue: {\n      get() {\n        return this.value\n      },\n      set(newValue) {\n        this.$emit('input', newValue)\n      }\n    }\n  }\n}\n</script>\n```\n\nカスタムコンポーネント側では、v-modelにinnerValueを指定している。これはv-modelの定義に基づいて解釈すると、次のように分解できる。\n\n```vue\n<input type=\"text\" name=\"name\" :value=\"innerValue\" @input=\"innerValue = $event.target.value\")>\n```\n\n値が表示される時には、`innerValue`の値、すなわち親コンポーネントで`props`に渡している`value`の値が表示される。\n\n一方値を入力する際には、setterが働いて親コンポーネントの`input`イベントが、`newValue`つまり`$event.target.value`とともに発火される。これで親が保持しているv-modelのvalueの値が更新されると同時に`innerValue`の値も更新され、データの同期が完了する。\n","bodyHTML":"<h2 id=\"vue2%E7%B3%BB%E3%81%A7%E3%81%AEv-model\"><a class=\"header-anchor-link\" href=\"#vue2%E7%B3%BB%E3%81%A7%E3%81%AEv-model\" aria-hidden=\"true\" rel=\"nofollow\"></a> Vue2系でのv-model</h2>\n<h3 id=\"%E7%92%B0%E5%A2%83%E4%BD%9C%E6%88%90\"><a class=\"header-anchor-link\" href=\"#%E7%92%B0%E5%A2%83%E4%BD%9C%E6%88%90\" aria-hidden=\"true\" rel=\"nofollow\"></a> 環境作成</h3>\n<div class=\"code-block-container\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx vue create v-model-dos\n\n? Please pick a preset:\n  Default <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Vue <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> babel, eslint<span class=\"token punctuation\">)</span>\n❯ Default <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Vue <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> babel, eslint<span class=\"token punctuation\">)</span>\n  Manually <span class=\"token keyword\">select</span> features\n</code></pre></div><h3 id=\"v-model%E3%81%A8%E3%81%AF\"><a class=\"header-anchor-link\" href=\"#v-model%E3%81%A8%E3%81%AF\" aria-hidden=\"true\" rel=\"nofollow\"></a> v-modelとは</h3>\n<h3 id=\"v-model%E3%82%92%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#v-model%E3%82%92%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AB%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> v-modelをシンプルに使用する</h3>\n<h3 id=\"v-model%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#v-model%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> v-modelをカスタムコンポーネントで使用する</h3>\n<h4 id=\"%E6%A7%8B%E9%80%A0\"><a class=\"header-anchor-link\" href=\"#%E6%A7%8B%E9%80%A0\" aria-hidden=\"true\" rel=\"nofollow\"></a> 構造</h4>\n<h4 id=\"%E6%96%B9%E6%B3%951%EF%BC%9Avalue%E3%82%92%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8A%E3%80%81input%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%A7%E8%A6%AA%E3%81%AEinput%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B8%A1%E3%81%99\"><a class=\"header-anchor-link\" href=\"#%E6%96%B9%E6%B3%951%EF%BC%9Avalue%E3%82%92%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8A%E3%80%81input%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%A7%E8%A6%AA%E3%81%AEinput%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%B8%A1%E3%81%99\" aria-hidden=\"true\" rel=\"nofollow\"></a> 方法1：valueを受け取り、inputイベントで親のinputにデータを渡す</h4>\n<h4 id=\"%E6%96%B9%E6%B3%951-%CE%B1%EF%BC%9A%E4%BD%BF%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E5%90%8D%E3%81%A8%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E3%80%82\"><a class=\"header-anchor-link\" href=\"#%E6%96%B9%E6%B3%951-%CE%B1%EF%BC%9A%E4%BD%BF%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E5%90%8D%E3%81%A8%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E3%80%82\" aria-hidden=\"true\" rel=\"nofollow\"></a> 方法1-α：使用されるプロパティ名とイベントを変更する。</h4>\n<h4 id=\"%E6%96%B9%E6%B3%952%EF%BC%9A%E5%8F%8C%E6%96%B9%E5%90%91%E7%AE%97%E5%87%BA%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#%E6%96%B9%E6%B3%952%EF%BC%9A%E5%8F%8C%E6%96%B9%E5%90%91%E7%AE%97%E5%87%BA%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> 方法2：双方向算出プロパティを利用する</h4>\n<p>なぜ<code>props</code>で受け取っている<code>value</code>をそのままカスタムコンポーネント（子）の<code>v-model</code>で指定してしまうと、Vue側から「親の値を直接変更すると、再レンダリングのたびに値が上書きされる」といった警告が出てしまう。</p>\n<p>そのため親からもらってきた値を変更するには、そのコンポーネント内で保持している変数として一度格納するか（例えば<code>mounted</code>のタイミングで、<code>data</code>に定義してある変数に格納）、後述の算出プロパティを用いる。リアクティブな値を利用してその変更に追随した処理を書くには算出プロパティがスッキリしている。</p>\n<p>算出プロパティ<code>computed</code>はプロパティ名のみを指定した場合、getter関数として定義される。リアクティブな値Aに対して、なんらかの処理を定義する事で、Aが変更されるのと同時にgetterで取得できる値も変更される。</p>\n<p>算出プロパティは明示することで、setterとしても利用することができる。</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\">computed: {\n  fullName: {\n    get() {\n      return `${this.firstName} ${this.lastName}`}\n    },\n    set(newValue) {\n      const [newFirstName, newLastName] = newValue.split(' ')\n      this.firstName = newFirstName\n      this.lastName = new LastName\n    }\n  }\n}\n</code></pre></div><p>この仕組みを利用して、v-modelの値を定義する。</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ label }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>innerValue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'MyInputOptions'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">require</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">require</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">innerValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>カスタムコンポーネント側では、v-modelにinnerValueを指定している。これはv-modelの定義に基づいて解釈すると、次のように分解できる。</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>innerValue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>innerValue = $event.target.value<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">)</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>値が表示される時には、<code>innerValue</code>の値、すなわち親コンポーネントで<code>props</code>に渡している<code>value</code>の値が表示される。</p>\n<p>一方値を入力する際には、setterが働いて親コンポーネントの<code>input</code>イベントが、<code>newValue</code>つまり<code>$event.target.value</code>とともに発火される。これで親が保持しているv-modelのvalueの値が更新されると同時に<code>innerValue</code>の値も更新され、データの同期が完了する。</p>\n","author_association":"OWNER","created_at":"2022-06-19T11:33:31Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/37#issuecomment-1159697582","id":1159697582,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/37","node_id":"IC_kwDOHWTPVs5FH5Su","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159697582/reactions"},"updated_at":"2022-06-19T11:33:31Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159697582","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}