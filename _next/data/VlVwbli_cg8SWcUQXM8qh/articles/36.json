{"pageProps":{"issue":{"body":"","bodyHTML":"","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36/comments","created_at":"2022-06-18T10:30:56Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/36","id":1275755991,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5MCn3X","number":36,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36/timeline","title":"2022-06-18","updated_at":"2022-06-18T10:30:56Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"## ハマりへの対策\n\n### ハマらないために\n\n- 何か新しいことをやる時は、それだけにフォーカスできる状態で練習を一度する\n  - クイックスタート等をみながらやると、最短でいける可能性はあるが、うまくいかなかった場合に試行錯誤に時間がかかる\n- 背伸びはしない\n  - 自分が使いたいものに直接関連しているものへの理解度は、ハマらない確率をあげる重要な要素\n- ブログを書く\n  - 「〇〇について完全に理解した」と思ったり、そこに少しでも近づいたらブログに書く。将来の「〇〇について完全に忘れた」自分が読んで喜ぶようなものを書いておくと捗る。\n- 興味があるものを先に試しておく\n\n\n### ハマったら\n\n- ここは大丈夫だろうという思い込みをなくす\n  - 人に相談されたらその人がフォーカスしていない部分について確認するようにする。意外と関係ない部分でハマっているかも\n- 「ハマらないために」のセクションで書いてあることをやっていない場合はやる\n- 相談する\n- 1つの課題でのハマりバジェットを決める（2hとか）。それを超えたらジョギングかサウナかビールで肉体的に凝った思考を緩めます\n- 単純な問題に分解する\n\n### 参考\n\n- https://blog.okazuki.jp/entry/2019/12/15/090621\n- https://qiita.com/TsuyoshiUshio@github/items/8152e4a041bcb6deae54\n- https://note.com/simplearchitect/n/n130bdbd653fb\n\n## 成長のエッセンス\n\n- What could I do differently?\n- 言われたことを愚直に実践する。守破離\n- アウトカムを急がない。じゃぶじゃぶに時間を使う\n- わからない部分をブラックボックスとして扱う\n- ブログを書く前提で調査したことをメモする\n- 試行錯誤は無駄。解決してもそのパターンが出なければその問題に対処できない（過去問のあるパターンの解法を覚えても、試験本番でそれが出なければ無意味）。科学的な方法、もしくは経験者の話を聞いて、問題を1つ1つ狭めることが重要\n- 技術を学ぶ際には「理解」をゴールにするのではなく、「その技術をコントロール配下におくこと」をゴールにする。\n- 「コードやインフラはちゃんと設定すれば動くもの」。「コードは思った通りに動くものとは限らない」で試行錯誤をしない\n- 計画は変更になるかもしれないけど、計画を必ず立てること\n- ライブラリを使う時は、そのライブラリから学び、そのライブラリが自分も書けるようになること\n- コードリーディングでは極力詳細を読まない。インターフェースと役割を理解する。\n- 生産性をあげるためには学習だよ。コピペすれば一時的なアウトカムは出せる鴨だけど、中長期の生産性は上がらない。\n  - ずっと仕事をするのは、神の計画ではない。\n  - 仕事をずっとしているのはサスティナブルではない\n　- 学習はリラックスした状態でできる。新しい技術を学んだり、自分が知らない技術を学ぶ時間にあてている。\n- 時間をかけるのを恐れてはいけない。自分が知らない時はリプロダクションする。どうしてもショートカットできない部分はある。\n- 自分のための時間をブロックする。\n- 引き継ぎを想定して、構造やコンテキスト、アーキテクチャに関するポインタを保持しておくようにする。\n- どんな頭がいい人でも理解には時間がかかるもの。早くしようとするものは遅くなる。\n  - 手を動かさないで、ドキュメントから理解するようにする。全然理解できないから早くコードをみないと？どれくらい時間をかけたかデータとしてみてみよう。\n  - 「私は偉大なプログラマではなく、偉大な習慣を身につけたプログラマだ」 Kent Beck\n  - 理解しようと、コントールしようと時間をかける習慣。\n- できたことと、わかっていることはイコールではない。メンタルモデルを作ることを意識する。\n- 質問するのを恐れない。エンジニアがより賢くなるのはチームの幸せにつながる。\n  - 「この部分をこのように変えたいんやけど、コードポインターとかPRとかない？」\n　- エキスパートに速攻頼るはベストプラクティス\n  - オリンピック選手にもコーチはいる\n- 知らないことで時間を2時間以上使った場合、ブロックされた場合は、それをBoxに入れて、また後で取り出すようにしたらいいよ\n  - 解答を待っている間も調査をするの無駄。\n- 頼る閾値\n  - その分野の「メンタルモデル」や「コンテキスト」がない場合、何はなくともエキスパートにPingしてよい。\n  - 相手が労力を要せずに解答できるものは聞いたら良い（PRをシェアしてもらう、そのシステムのコンテキストや勘所を説明するとか）\n- チームに聞ける文化は、チームが強くなるために必要。逆に言えば、チームに聞かれた時の準備も必要。\n- 理解の6側面：https://learn-tern.com/understanding-6aspects/\n\n### 参考\n\n- https://note.com/simplearchitect/n/nbf330ae7770f\n- https://note.com/simplearchitect/n/n1170c5ecfb1a\n- https://note.com/simplearchitect/n/n2168b03da314\n- amazon.co.jp/dp/B00MB2STXK?tag=note0e2a-22&linkCode=ogi&th=1&psc=1\n- https://note.com/simplearchitect/n/n8cd219056536\n- https://note.com/simplearchitect/n/n1b0263219060\n- https://note.com/simplearchitect/n/n9bd63cd83c6b\n- https://note.com/simplearchitect/n/n388201603a28\n- https://note.com/simplearchitect/n/nd467a44db8a4\n- https://note.com/simplearchitect/n/n0352e214452c\n- https://note.com/simplearchitect/n/n715f5be74526\n\n## 日常のエッセンス\n\n- 毎朝ウォーキングをする\n- 休みには脳の酷使を止める。エンジニアならディスプレイから離れる。\n\n\n### 参考\n\n- https://note.com/simplearchitect/n/n9bc5b662670d\n- https://note.com/simplearchitect/n/n646682eeb8b5\n","bodyHTML":"<h2 id=\"%E3%83%8F%E3%83%9E%E3%82%8A%E3%81%B8%E3%81%AE%E5%AF%BE%E7%AD%96\"><a class=\"header-anchor-link\" href=\"#%E3%83%8F%E3%83%9E%E3%82%8A%E3%81%B8%E3%81%AE%E5%AF%BE%E7%AD%96\" aria-hidden=\"true\" rel=\"nofollow\"></a> ハマりへの対策</h2>\n<h3 id=\"%E3%83%8F%E3%83%9E%E3%82%89%E3%81%AA%E3%81%84%E3%81%9F%E3%82%81%E3%81%AB\"><a class=\"header-anchor-link\" href=\"#%E3%83%8F%E3%83%9E%E3%82%89%E3%81%AA%E3%81%84%E3%81%9F%E3%82%81%E3%81%AB\" aria-hidden=\"true\" rel=\"nofollow\"></a> ハマらないために</h3>\n<ul>\n<li>何か新しいことをやる時は、それだけにフォーカスできる状態で練習を一度する\n<ul>\n<li>クイックスタート等をみながらやると、最短でいける可能性はあるが、うまくいかなかった場合に試行錯誤に時間がかかる</li>\n</ul>\n</li>\n<li>背伸びはしない\n<ul>\n<li>自分が使いたいものに直接関連しているものへの理解度は、ハマらない確率をあげる重要な要素</li>\n</ul>\n</li>\n<li>ブログを書く\n<ul>\n<li>「〇〇について完全に理解した」と思ったり、そこに少しでも近づいたらブログに書く。将来の「〇〇について完全に忘れた」自分が読んで喜ぶようなものを書いておくと捗る。</li>\n</ul>\n</li>\n<li>興味があるものを先に試しておく</li>\n</ul>\n<h3 id=\"%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E3%82%89\"><a class=\"header-anchor-link\" href=\"#%E3%83%8F%E3%83%9E%E3%81%A3%E3%81%9F%E3%82%89\" aria-hidden=\"true\" rel=\"nofollow\"></a> ハマったら</h3>\n<ul>\n<li>ここは大丈夫だろうという思い込みをなくす\n<ul>\n<li>人に相談されたらその人がフォーカスしていない部分について確認するようにする。意外と関係ない部分でハマっているかも</li>\n</ul>\n</li>\n<li>「ハマらないために」のセクションで書いてあることをやっていない場合はやる</li>\n<li>相談する</li>\n<li>1つの課題でのハマりバジェットを決める（2hとか）。それを超えたらジョギングかサウナかビールで肉体的に凝った思考を緩めます</li>\n<li>単純な問題に分解する</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83\"><a class=\"header-anchor-link\" href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" rel=\"nofollow\"></a> 参考</h3>\n<ul>\n<li><a href=\"https://blog.okazuki.jp/entry/2019/12/15/090621\" rel=\"nofollow\">https://blog.okazuki.jp/entry/2019/12/15/090621</a></li>\n<li><a href=\"https://qiita.com/TsuyoshiUshio@github/items/8152e4a041bcb6deae54\" rel=\"nofollow\">https://qiita.com/TsuyoshiUshio@github/items/8152e4a041bcb6deae54</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n130bdbd653fb\" rel=\"nofollow\">https://note.com/simplearchitect/n/n130bdbd653fb</a></li>\n</ul>\n<h2 id=\"%E6%88%90%E9%95%B7%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B9\"><a class=\"header-anchor-link\" href=\"#%E6%88%90%E9%95%B7%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B9\" aria-hidden=\"true\" rel=\"nofollow\"></a> 成長のエッセンス</h2>\n<ul>\n<li>What could I do differently?</li>\n<li>言われたことを愚直に実践する。守破離</li>\n<li>アウトカムを急がない。じゃぶじゃぶに時間を使う</li>\n<li>わからない部分をブラックボックスとして扱う</li>\n<li>ブログを書く前提で調査したことをメモする</li>\n<li>試行錯誤は無駄。解決してもそのパターンが出なければその問題に対処できない（過去問のあるパターンの解法を覚えても、試験本番でそれが出なければ無意味）。科学的な方法、もしくは経験者の話を聞いて、問題を1つ1つ狭めることが重要</li>\n<li>技術を学ぶ際には「理解」をゴールにするのではなく、「その技術をコントロール配下におくこと」をゴールにする。</li>\n<li>「コードやインフラはちゃんと設定すれば動くもの」。「コードは思った通りに動くものとは限らない」で試行錯誤をしない</li>\n<li>計画は変更になるかもしれないけど、計画を必ず立てること</li>\n<li>ライブラリを使う時は、そのライブラリから学び、そのライブラリが自分も書けるようになること</li>\n<li>コードリーディングでは極力詳細を読まない。インターフェースと役割を理解する。</li>\n<li>生産性をあげるためには学習だよ。コピペすれば一時的なアウトカムは出せる鴨だけど、中長期の生産性は上がらない。\n<ul>\n<li>ずっと仕事をするのは、神の計画ではない。</li>\n<li>仕事をずっとしているのはサスティナブルではない<br>\n　- 学習はリラックスした状態でできる。新しい技術を学んだり、自分が知らない技術を学ぶ時間にあてている。</li>\n</ul>\n</li>\n<li>時間をかけるのを恐れてはいけない。自分が知らない時はリプロダクションする。どうしてもショートカットできない部分はある。</li>\n<li>自分のための時間をブロックする。</li>\n<li>引き継ぎを想定して、構造やコンテキスト、アーキテクチャに関するポインタを保持しておくようにする。</li>\n<li>どんな頭がいい人でも理解には時間がかかるもの。早くしようとするものは遅くなる。\n<ul>\n<li>手を動かさないで、ドキュメントから理解するようにする。全然理解できないから早くコードをみないと？どれくらい時間をかけたかデータとしてみてみよう。</li>\n<li>「私は偉大なプログラマではなく、偉大な習慣を身につけたプログラマだ」 Kent Beck</li>\n<li>理解しようと、コントールしようと時間をかける習慣。</li>\n</ul>\n</li>\n<li>できたことと、わかっていることはイコールではない。メンタルモデルを作ることを意識する。</li>\n<li>質問するのを恐れない。エンジニアがより賢くなるのはチームの幸せにつながる。\n<ul>\n<li>「この部分をこのように変えたいんやけど、コードポインターとかPRとかない？」<br>\n　- エキスパートに速攻頼るはベストプラクティス</li>\n<li>オリンピック選手にもコーチはいる</li>\n</ul>\n</li>\n<li>知らないことで時間を2時間以上使った場合、ブロックされた場合は、それをBoxに入れて、また後で取り出すようにしたらいいよ\n<ul>\n<li>解答を待っている間も調査をするの無駄。</li>\n</ul>\n</li>\n<li>頼る閾値\n<ul>\n<li>その分野の「メンタルモデル」や「コンテキスト」がない場合、何はなくともエキスパートにPingしてよい。</li>\n<li>相手が労力を要せずに解答できるものは聞いたら良い（PRをシェアしてもらう、そのシステムのコンテキストや勘所を説明するとか）</li>\n</ul>\n</li>\n<li>チームに聞ける文化は、チームが強くなるために必要。逆に言えば、チームに聞かれた時の準備も必要。</li>\n<li>理解の6側面：<a href=\"https://learn-tern.com/understanding-6aspects/\" rel=\"nofollow\">https://learn-tern.com/understanding-6aspects/</a></li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83-1\"><a class=\"header-anchor-link\" href=\"#%E5%8F%82%E8%80%83-1\" aria-hidden=\"true\" rel=\"nofollow\"></a> 参考</h3>\n<ul>\n<li><a href=\"https://note.com/simplearchitect/n/nbf330ae7770f\" rel=\"nofollow\">https://note.com/simplearchitect/n/nbf330ae7770f</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n1170c5ecfb1a\" rel=\"nofollow\">https://note.com/simplearchitect/n/n1170c5ecfb1a</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n2168b03da314\" rel=\"nofollow\">https://note.com/simplearchitect/n/n2168b03da314</a></li>\n<li>amazon.co.jp/dp/B00MB2STXK?tag=note0e2a-22&amp;linkCode=ogi&amp;th=1&amp;psc=1</li>\n<li><a href=\"https://note.com/simplearchitect/n/n8cd219056536\" rel=\"nofollow\">https://note.com/simplearchitect/n/n8cd219056536</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n1b0263219060\" rel=\"nofollow\">https://note.com/simplearchitect/n/n1b0263219060</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n9bd63cd83c6b\" rel=\"nofollow\">https://note.com/simplearchitect/n/n9bd63cd83c6b</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n388201603a28\" rel=\"nofollow\">https://note.com/simplearchitect/n/n388201603a28</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/nd467a44db8a4\" rel=\"nofollow\">https://note.com/simplearchitect/n/nd467a44db8a4</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n0352e214452c\" rel=\"nofollow\">https://note.com/simplearchitect/n/n0352e214452c</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n715f5be74526\" rel=\"nofollow\">https://note.com/simplearchitect/n/n715f5be74526</a></li>\n</ul>\n<h2 id=\"%E6%97%A5%E5%B8%B8%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B9\"><a class=\"header-anchor-link\" href=\"#%E6%97%A5%E5%B8%B8%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B9\" aria-hidden=\"true\" rel=\"nofollow\"></a> 日常のエッセンス</h2>\n<ul>\n<li>毎朝ウォーキングをする</li>\n<li>休みには脳の酷使を止める。エンジニアならディスプレイから離れる。</li>\n</ul>\n<h3 id=\"%E5%8F%82%E8%80%83-2\"><a class=\"header-anchor-link\" href=\"#%E5%8F%82%E8%80%83-2\" aria-hidden=\"true\" rel=\"nofollow\"></a> 参考</h3>\n<ul>\n<li><a href=\"https://note.com/simplearchitect/n/n9bc5b662670d\" rel=\"nofollow\">https://note.com/simplearchitect/n/n9bc5b662670d</a></li>\n<li><a href=\"https://note.com/simplearchitect/n/n646682eeb8b5\" rel=\"nofollow\">https://note.com/simplearchitect/n/n646682eeb8b5</a></li>\n</ul>\n","author_association":"OWNER","created_at":"2022-06-18T12:47:52Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/36#issuecomment-1159458944","id":1159458944,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/36","node_id":"IC_kwDOHWTPVs5FG_CA","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159458944/reactions"},"updated_at":"2022-06-18T12:47:52Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1159458944","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}