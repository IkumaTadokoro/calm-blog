{"pageProps":{"issue":{"body":"https://vuejs.org/\r\n\r\nhttps://github.com/vuejs-translations/docs-ja\r\n\r\n別に日付じゃなくてもスレッドは作れる","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/</a></p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fgithub.com%2Fvuejs-translations%2Fdocs-ja\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://github.com/vuejs-translations/docs-ja\" style=\"display: none\" rel=\"nofollow\">https://github.com/vuejs-translations/docs-ja</a></p>\n<p>別に日付じゃなくてもスレッドは作れる</p>\n","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28/comments","created_at":"2022-06-10T09:51:06Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/28","id":1267319992,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5LicS4","number":28,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28/timeline","title":"Vue3のドキュメントを読む","updated_at":"2022-06-10T09:51:06Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"目標がないとだれるので、まずは以下のページを翻訳していくことを目標にやっていく。\r\n\r\nhttps://vuejs.org/guide/components/events.html","bodyHTML":"<p>目標がないとだれるので、まずは以下のページを翻訳していくことを目標にやっていく。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fcomponents%2Fevents.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/components/events.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/components/events.html</a></p>\n","author_association":"OWNER","created_at":"2022-06-10T10:04:20Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152196132","id":1152196132,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErR4k","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152196132/reactions"},"updated_at":"2022-06-10T10:04:20Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152196132","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/introduction.html\r\n\r\n撃破ぁ！","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fintroduction.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/introduction.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/introduction.html</a></p>\n<p>撃破ぁ！</p>\n","author_association":"OWNER","created_at":"2022-06-10T12:45:55Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152321932","id":1152321932,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErwmM","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152321932/reactions"},"updated_at":"2022-06-10T12:45:55Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152321932","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/quick-start.html\r\n\r\n撃破ぁ！","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fquick-start.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/quick-start.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/quick-start.html</a></p>\n<p>撃破ぁ！</p>\n","author_association":"OWNER","created_at":"2022-06-10T12:48:15Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152323744","id":1152323744,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErxCg","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152323744/reactions"},"updated_at":"2022-06-10T12:48:15Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152323744","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"ここまでは序章なのでね...","bodyHTML":"<p>ここまでは序章なのでね...</p>\n","author_association":"OWNER","created_at":"2022-06-10T12:48:23Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152323844","id":1152323844,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErxEE","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152323844/reactions"},"updated_at":"2022-06-10T12:48:23Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152323844","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/application.html\r\n\r\n## The Root Component\r\n\r\n```typescript\r\nimport { createApp } from 'vue'\r\n\r\n// appはroot component\r\nconst app = createApp({\r\n  /* root component options */ \r\n})\r\n\r\n// SFCで定義している場合はこんな感じになることが多い\r\nconst app = createApp(App)\r\n```\r\n\r\n## Mounting the App\r\n\r\n> The content of the app's root component will be rendered inside the container element. The container element itself is not considered part of the app.\r\n\r\nコンテナが置き換わるんじゃなくて、その中の要素になったのはいいんだけど、これはどのタイミングからだっけ？Vue 3になってから？Compositon APIだから？\r\nたぶんVue3になってからなので、Vue2系だと元の挙動かも。\r\n\r\n## App Configurations\r\n\r\n- アプリケーションインスタンスは、`.config`オブジェクトを公開していて、アプリレベルでの設定を行うことができる。\r\n- そのほかはAPIリファレンス見てね\r\n\r\n## Multiple application instances\r\n\r\n- 今までは基本的に一箇所にしかマウントしてこなかったけど、一つのアプリを複数箇所にマウントも可能。\r\n- サーバーレンダリングされた HTML を拡張するために使用していたり、大きなページの中で特定の一部を操作するためだけに必要とするケースで有用。\r\n\r\n終幕","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Fapplication.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/application.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/application.html</a></p>\n<h2 id=\"the-root-component\"><a class=\"header-anchor-link\" href=\"#the-root-component\" aria-hidden=\"true\" rel=\"nofollow\"></a> The Root Component</h2>\n<div class=\"code-block-container\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token comment\">// appはroot component</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* root component options */</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// SFCで定義している場合はこんな感じになることが多い</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n</code></pre></div><h2 id=\"mounting-the-app\"><a class=\"header-anchor-link\" href=\"#mounting-the-app\" aria-hidden=\"true\" rel=\"nofollow\"></a> Mounting the App</h2>\n<blockquote>\n<p>The content of the app's root component will be rendered inside the container element. The container element itself is not considered part of the app.</p>\n</blockquote>\n<p>コンテナが置き換わるんじゃなくて、その中の要素になったのはいいんだけど、これはどのタイミングからだっけ？Vue 3になってから？Compositon APIだから？<br>\nたぶんVue3になってからなので、Vue2系だと元の挙動かも。</p>\n<h2 id=\"app-configurations\"><a class=\"header-anchor-link\" href=\"#app-configurations\" aria-hidden=\"true\" rel=\"nofollow\"></a> App Configurations</h2>\n<ul>\n<li>アプリケーションインスタンスは、<code>.config</code>オブジェクトを公開していて、アプリレベルでの設定を行うことができる。</li>\n<li>そのほかはAPIリファレンス見てね</li>\n</ul>\n<h2 id=\"multiple-application-instances\"><a class=\"header-anchor-link\" href=\"#multiple-application-instances\" aria-hidden=\"true\" rel=\"nofollow\"></a> Multiple application instances</h2>\n<ul>\n<li>今までは基本的に一箇所にしかマウントしてこなかったけど、一つのアプリを複数箇所にマウントも可能。</li>\n<li>サーバーレンダリングされた HTML を拡張するために使用していたり、大きなページの中で特定の一部を操作するためだけに必要とするケースで有用。</li>\n</ul>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-10T12:58:58Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152332480","id":1152332480,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErzLA","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152332480/reactions"},"updated_at":"2022-06-10T12:58:58Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152332480","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"翻訳の方、メニューの翻訳が入っていないのは別担当なのかな？","bodyHTML":"<p>翻訳の方、メニューの翻訳が入っていないのは別担当なのかな？</p>\n","author_association":"OWNER","created_at":"2022-06-10T13:00:00Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152333311","id":1152333311,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErzX_","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152333311/reactions"},"updated_at":"2022-06-10T13:00:00Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152333311","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/template-syntax.html\r\n\r\n仮想DOMも要学習です。\r\n\r\n## Text Interpolation\r\n\r\n`{{ }}`の話\r\n\r\n## Raw HTML\r\n\r\n`v-html`はXSSの可能性があるから気をつけろって、それ一万年と二千年前から...\r\n\r\n## Attribute Bindings\r\n\r\n- 今更だけど、変数が`\"\"`でバインドされるの、とても違和感\r\n- オブジェクトで複数の値をまとめて設定できる。\r\n\r\n```typescript\r\nconst objectOfAttrs = {\r\n  id: 'container',\r\n  class: 'wrapper'\r\n}\r\n```\r\n\r\n```html\r\n<div v-bind=\"objectOfAttrs\"></div>\r\n```\r\n\r\n## Using JavaScript Expressions\r\n\r\n- > バインディングの式の内部で呼び出される関数は、コンポーネントが更新されるたびに呼び出されます。そのため、データの変更や非同期処理をトリガーするような副作用を持たせてはいけません。\r\n\r\n## Directives\r\n\r\n動的引数は`[]`で表す。\r\n\r\n```html\r\n<!-- attributeNameは動的に評価される -->\r\n<a :[attributeName]=\"url\"> ... </a>\r\n```\r\n\r\n複雑な動的名称を直接埋め込むとコンパイルエラーになるので、`computed`を使ってくださいとのこと。\r\n\r\n```html\r\n<a :[someAttr]=\"value\"> ... </a>\r\n```\r\n\r\nこの`someAttr`は`someattr`に変換されるので注意。参照先のJSは`someattr`です。\r\n\r\n![image](https://user-images.githubusercontent.com/61409641/173073735-57765b22-73d8-4fbd-bfee-c5aeabb0044b.png)\r\n\r\n修飾子は知らないやつでてくると面食らうんだよな。インデックスはちゃんと貼っておこう\r\n\r\n---\r\n\r\n終幕\r\n","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Ftemplate-syntax.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/template-syntax.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/template-syntax.html</a></p>\n<p>仮想DOMも要学習です。</p>\n<h2 id=\"text-interpolation\"><a class=\"header-anchor-link\" href=\"#text-interpolation\" aria-hidden=\"true\" rel=\"nofollow\"></a> Text Interpolation</h2>\n<p><code>{{ }}</code>の話</p>\n<h2 id=\"raw-html\"><a class=\"header-anchor-link\" href=\"#raw-html\" aria-hidden=\"true\" rel=\"nofollow\"></a> Raw HTML</h2>\n<p><code>v-html</code>はXSSの可能性があるから気をつけろって、それ一万年と二千年前から...</p>\n<h2 id=\"attribute-bindings\"><a class=\"header-anchor-link\" href=\"#attribute-bindings\" aria-hidden=\"true\" rel=\"nofollow\"></a> Attribute Bindings</h2>\n<ul>\n<li>今更だけど、変数が<code>&quot;&quot;</code>でバインドされるの、とても違和感</li>\n<li>オブジェクトで複数の値をまとめて設定できる。</li>\n</ul>\n<div class=\"code-block-container\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> objectOfAttrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token string\">'container'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'wrapper'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-bind</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>objectOfAttrs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><h2 id=\"using-javascript-expressions\"><a class=\"header-anchor-link\" href=\"#using-javascript-expressions\" aria-hidden=\"true\" rel=\"nofollow\"></a> Using JavaScript Expressions</h2>\n<ul>\n<li>\n<blockquote>\n<p>バインディングの式の内部で呼び出される関数は、コンポーネントが更新されるたびに呼び出されます。そのため、データの変更や非同期処理をトリガーするような副作用を持たせてはいけません。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"directives\"><a class=\"header-anchor-link\" href=\"#directives\" aria-hidden=\"true\" rel=\"nofollow\"></a> Directives</h2>\n<p>動的引数は<code>[]</code>で表す。</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- attributeNameは動的に評価される --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:[attributeName]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>複雑な動的名称を直接埋め込むとコンパイルエラーになるので、<code>computed</code>を使ってくださいとのこと。</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">:[someAttr]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>この<code>someAttr</code>は<code>someattr</code>に変換されるので注意。参照先のJSは<code>someattr</code>です。</p>\n<p><img src=\"https://user-images.githubusercontent.com/61409641/173073735-57765b22-73d8-4fbd-bfee-c5aeabb0044b.png\" alt=\"image\"></p>\n<p>修飾子は知らないやつでてくると面食らうんだよな。インデックスはちゃんと貼っておこう</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-10T13:00:02Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152333336","id":1152333336,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5ErzYY","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152333336/reactions"},"updated_at":"2022-06-10T13:22:14Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152333336","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/reactivity-fundamentals.html\r\n\r\n## Declaring Reactive State\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\r\n\r\nこれちょいちょいデバッグでは見かけているんだけど、ちゃんと実装を終えていないんだよね。\r\n\r\nhttps://zenn.dev/morinokami/books/learning-patterns-1/viewer/proxy-pattern\r\n\r\nVueの公式ガイド内にもある程度説明があるっぽいのでちゃんと読むか。\r\n\r\nTypeScript対応は後で読む。\r\n\r\n## DOM Update Timing\r\n\r\nDOM更新のタイミングの話。**Vueの**`nextTick`が走るタイミングでDOMの更新が行われる。へえ〜。\r\n\r\n`nextTick`はNode.jsにもあった（今は`microTaskQueue`が推奨だっけ？）けど、それに寄せているのか、一般的なデザインパターンにある名称なのか。\r\n\r\n## Deep Reactivity\r\n\r\nreactivityのshallow copyもできるんだ。知らなかったし、いつ使うんだし。\r\n\r\n## Reactive Proxy vs. Original\r\n\r\n- `reactive()`の戻り値は、元のオブジェクトのProxy\r\n\r\n## Limitations of `reactive()`\r\n\r\n`reactive`の制約\r\n\r\n1. object（オブジェクト、配列、コレクション）にしか使えない。\r\n1. リアクティブなオブジェクトへの参照は常に同じにする必要がある（Proxyが壊れる）。ローカル変数に突っ込んだり、分割代入したしてもぶっ壊れる。\r\n\r\n## Reactive Variables with `ref()`\r\n\r\n`ref()`はなんでも取れるよ。`value`プロパティを持つオブジェクトを返すよ。\r\n色々突っ込んでもリアクティビティは壊れないよ。\r\ntemplateに突っ込むときは`.value`は不要だよ。でもこれはトップレベルプロパティの場合で、オブジェクトのプロパティとかになるとだめだよ。分割代入とかしてトップレベルになるようにしてね。でも無スタッシュ構文の中だとオブジェクトでも`.value`不要だよ。\r\n\r\n## Reactivity Transform\r\n\r\n一応スレは動いているけど、まだExperimental\r\n\r\n---\r\n\r\n終幕\r\n","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Freactivity-fundamentals.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/reactivity-fundamentals.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/reactivity-fundamentals.html</a></p>\n<h2 id=\"declaring-reactive-state\"><a class=\"header-anchor-link\" href=\"#declaring-reactive-state\" aria-hidden=\"true\" rel=\"nofollow\"></a> Declaring Reactive State</h2>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FProxy\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" style=\"display: none\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy</a></p>\n<p>これちょいちょいデバッグでは見かけているんだけど、ちゃんと実装を終えていないんだよね。</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fzenn.dev%2Fmorinokami%2Fbooks%2Flearning-patterns-1%2Fviewer%2Fproxy-pattern\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://zenn.dev/morinokami/books/learning-patterns-1/viewer/proxy-pattern\" style=\"display: none\">https://zenn.dev/morinokami/books/learning-patterns-1/viewer/proxy-pattern</a></p>\n<p>Vueの公式ガイド内にもある程度説明があるっぽいのでちゃんと読むか。</p>\n<p>TypeScript対応は後で読む。</p>\n<h2 id=\"dom-update-timing\"><a class=\"header-anchor-link\" href=\"#dom-update-timing\" aria-hidden=\"true\" rel=\"nofollow\"></a> DOM Update Timing</h2>\n<p>DOM更新のタイミングの話。<strong>Vueの</strong><code>nextTick</code>が走るタイミングでDOMの更新が行われる。へえ〜。</p>\n<p><code>nextTick</code>はNode.jsにもあった（今は<code>microTaskQueue</code>が推奨だっけ？）けど、それに寄せているのか、一般的なデザインパターンにある名称なのか。</p>\n<h2 id=\"deep-reactivity\"><a class=\"header-anchor-link\" href=\"#deep-reactivity\" aria-hidden=\"true\" rel=\"nofollow\"></a> Deep Reactivity</h2>\n<p>reactivityのshallow copyもできるんだ。知らなかったし、いつ使うんだし。</p>\n<h2 id=\"reactive-proxy-vs.-original\"><a class=\"header-anchor-link\" href=\"#reactive-proxy-vs.-original\" aria-hidden=\"true\" rel=\"nofollow\"></a> Reactive Proxy vs. Original</h2>\n<ul>\n<li><code>reactive()</code>の戻り値は、元のオブジェクトのProxy</li>\n</ul>\n<h2 id=\"limitations-of-reactive()\"><a class=\"header-anchor-link\" href=\"#limitations-of-reactive()\" aria-hidden=\"true\" rel=\"nofollow\"></a> Limitations of <code>reactive()</code></h2>\n<p><code>reactive</code>の制約</p>\n<ol>\n<li>object（オブジェクト、配列、コレクション）にしか使えない。</li>\n<li>リアクティブなオブジェクトへの参照は常に同じにする必要がある（Proxyが壊れる）。ローカル変数に突っ込んだり、分割代入したしてもぶっ壊れる。</li>\n</ol>\n<h2 id=\"reactive-variables-with-ref()\"><a class=\"header-anchor-link\" href=\"#reactive-variables-with-ref()\" aria-hidden=\"true\" rel=\"nofollow\"></a> Reactive Variables with <code>ref()</code></h2>\n<p><code>ref()</code>はなんでも取れるよ。<code>value</code>プロパティを持つオブジェクトを返すよ。<br>\n色々突っ込んでもリアクティビティは壊れないよ。<br>\ntemplateに突っ込むときは<code>.value</code>は不要だよ。でもこれはトップレベルプロパティの場合で、オブジェクトのプロパティとかになるとだめだよ。分割代入とかしてトップレベルになるようにしてね。でも無スタッシュ構文の中だとオブジェクトでも<code>.value</code>不要だよ。</p>\n<h2 id=\"reactivity-transform\"><a class=\"header-anchor-link\" href=\"#reactivity-transform\" aria-hidden=\"true\" rel=\"nofollow\"></a> Reactivity Transform</h2>\n<p>一応スレは動いているけど、まだExperimental</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-10T14:01:14Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152394938","id":1152394938,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5EsCa6","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152394938/reactions"},"updated_at":"2022-06-10T14:01:14Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152394938","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/computed.html\r\n\r\n## Writable Computed\r\n\r\n```typescript\r\nimport { ref, computed } from 'vue'\r\n\r\nconst firstName = ref('John')\r\nconst lastName = ref('Doe')\r\n\r\nconst fullName = computed({\r\n  // getter\r\n  get() {\r\n    return firstName.value + ' ' + lastName.value\r\n  },\r\n  // setter\r\n  set(newValue) {\r\n    // Note: we are using destructuring assignment syntax here.\r\n    [firstName.value, lastName.value] = newValue.split(' ')\r\n  }\r\n})\r\n```\r\n\r\n## Best Practices\r\n\r\n`computed`で計算された値はあくまで読み取り専用のビューみたいなものなので、表示ようにだけ使用するイメージ\r\n\r\n--- \r\n\r\n終幕","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Fcomputed.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/computed.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/computed.html</a></p>\n<h2 id=\"writable-computed\"><a class=\"header-anchor-link\" href=\"#writable-computed\" aria-hidden=\"true\" rel=\"nofollow\"></a> Writable Computed</h2>\n<div class=\"code-block-container\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref<span class=\"token punctuation\">,</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Doe'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> fullName <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// getter</span>\n  <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> firstName<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> lastName<span class=\"token punctuation\">.</span>value\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// setter</span>\n  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Note: we are using destructuring assignment syntax here.</span>\n    <span class=\"token punctuation\">[</span>firstName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div><h2 id=\"best-practices\"><a class=\"header-anchor-link\" href=\"#best-practices\" aria-hidden=\"true\" rel=\"nofollow\"></a> Best Practices</h2>\n<p><code>computed</code>で計算された値はあくまで読み取り専用のビューみたいなものなので、表示ようにだけ使用するイメージ</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-11T00:18:22Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152812504","id":1152812504,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5EtoXY","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152812504/reactions"},"updated_at":"2022-06-11T00:18:22Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152812504","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/class-and-style.html\r\n\r\n## Binding to Objects\r\n\r\n```html\r\n<div\r\n  class=\"static\"\r\n  :class=\"{ active: isActive, 'text-danger': hasError }\"\r\n></div>\r\n```\r\n\r\nオブジェクトを渡すことで、動的にクラスを定義することができる。もちろんインライン定義でなくてよい。\r\n\r\n## Binding to Arrays\r\n\r\n配列をバインドすると、クラスのリストを適用することができる。\r\n\r\n配列とオブジェクトを併用すると、動的なクラスと静的なクラスを同時に定義するのに便利\r\n\r\n```html\r\n<div :class=\"[{ active: isActive }, errorClass]\"></div>\r\n```\r\n\r\nこれは`class`属性と`v-bind:class`が二行になるのを嫌う場合かな\r\n\r\n## With Components\r\n\r\n- コンポーネントのルート要素が一つの時は、コンポーネント呼び出しにクラスを指定すればそれが適用される。\r\n- コンポーネントのルート要素が複数のときは、フォールスルー属性を利用して、どの要素が呼び出し側の要素を引き継ぐか指定する必要がある。\r\n\r\n```html\r\n<!-- $attrs を使った my-component のテンプレート -->\r\n<p :class=\"$attrs.class\">Hi!</p>\r\n<span>This is a child component</span>\r\n```\r\n\r\n```html\r\n<my-component class=\"baz\"></my-component>\r\n```\r\n\r\n呼び出し側で指定されている`class=\"baz\"`は`$attrs.class`で参照される\r\n\r\n## Binding Inline Styles\r\n\r\n`:style`でインラインスタイルも定義できる。使うかな〜\r\n一応これを使用するとベンダープレフィクスは自動で定義される見たいです。\r\n\r\n---\r\n\r\n終幕\r\n","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Fclass-and-style.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/class-and-style.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/class-and-style.html</a></p>\n<h2 id=\"binding-to-objects\"><a class=\"header-anchor-link\" href=\"#binding-to-objects\" aria-hidden=\"true\" rel=\"nofollow\"></a> Binding to Objects</h2>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>static<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ active: isActive, <span class=\"token punctuation\">'</span>text-danger<span class=\"token punctuation\">'</span>: hasError }<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>オブジェクトを渡すことで、動的にクラスを定義することができる。もちろんインライン定義でなくてよい。</p>\n<h2 id=\"binding-to-arrays\"><a class=\"header-anchor-link\" href=\"#binding-to-arrays\" aria-hidden=\"true\" rel=\"nofollow\"></a> Binding to Arrays</h2>\n<p>配列をバインドすると、クラスのリストを適用することができる。</p>\n<p>配列とオブジェクトを併用すると、動的なクラスと静的なクラスを同時に定義するのに便利</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[{ active: isActive }, errorClass]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>これは<code>class</code>属性と<code>v-bind:class</code>が二行になるのを嫌う場合かな</p>\n<h2 id=\"with-components\"><a class=\"header-anchor-link\" href=\"#with-components\" aria-hidden=\"true\" rel=\"nofollow\"></a> With Components</h2>\n<ul>\n<li>コンポーネントのルート要素が一つの時は、コンポーネント呼び出しにクラスを指定すればそれが適用される。</li>\n<li>コンポーネントのルート要素が複数のときは、フォールスルー属性を利用して、どの要素が呼び出し側の要素を引き継ぐか指定する必要がある。</li>\n</ul>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- $attrs を使った my-component のテンプレート --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$attrs.class<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Hi!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>This is a child component<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-component</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baz<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-component</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>呼び出し側で指定されている<code>class=&quot;baz&quot;</code>は<code>$attrs.class</code>で参照される</p>\n<h2 id=\"binding-inline-styles\"><a class=\"header-anchor-link\" href=\"#binding-inline-styles\" aria-hidden=\"true\" rel=\"nofollow\"></a> Binding Inline Styles</h2>\n<p><code>:style</code>でインラインスタイルも定義できる。使うかな〜<br>\n一応これを使用するとベンダープレフィクスは自動で定義される見たいです。</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-11T00:28:34Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152815116","id":1152815116,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5EtpAM","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152815116/reactions"},"updated_at":"2022-06-11T00:28:34Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152815116","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/conditional.html\r\n\r\n## `v-if` vs `v-show`\r\n\r\n`v-show`は常に表示されているので、頻繁に切り替えるならこっち\r\n\r\n## `v-if`と`v-for`\r\n\r\n`v-if`と`v-for`が同じ要素に使用される場合は、`v-if`が優先。あんまり同じ要素にこれらを同時に使用することは推奨されない。\r\n\r\n---\r\n\r\n終幕","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Fconditional.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/conditional.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/conditional.html</a></p>\n<h2 id=\"v-if-vs-v-show\"><a class=\"header-anchor-link\" href=\"#v-if-vs-v-show\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>v-if</code> vs <code>v-show</code></h2>\n<p><code>v-show</code>は常に表示されているので、頻繁に切り替えるならこっち</p>\n<h2 id=\"v-if%E3%81%A8v-for\"><a class=\"header-anchor-link\" href=\"#v-if%E3%81%A8v-for\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>v-if</code>と<code>v-for</code></h2>\n<p><code>v-if</code>と<code>v-for</code>が同じ要素に使用される場合は、<code>v-if</code>が優先。あんまり同じ要素にこれらを同時に使用することは推奨されない。</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-11T00:31:29Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152815878","id":1152815878,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5EtpMG","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152815878/reactions"},"updated_at":"2022-06-11T00:31:39Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152815878","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/list.html\r\n\r\n## `v-for`\r\n\r\n区切り文字の`in`と`of`は等価。\r\n\r\n## Array Change Detection\r\n\r\n配列の変更に追随して、Vueは描画を更新する。\r\n逆に言えばイミュータブルなメソッドの場合は、既存の配列に代入するような操作が必要になる。\r\n\r\n置き換えるとDOMが全て変更されるような感じもするけれど、そこはVueがよしなにやってくれるそう。\r\n\r\n## Displaying Filtered/Sorted Results\r\n\r\n元の配列を維持したい場合は、computedを使いましょうと言う話\r\n\r\n---\r\n\r\n終幕","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Flist.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/list.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/list.html</a></p>\n<h2 id=\"v-for\"><a class=\"header-anchor-link\" href=\"#v-for\" aria-hidden=\"true\" rel=\"nofollow\"></a> <code>v-for</code></h2>\n<p>区切り文字の<code>in</code>と<code>of</code>は等価。</p>\n<h2 id=\"array-change-detection\"><a class=\"header-anchor-link\" href=\"#array-change-detection\" aria-hidden=\"true\" rel=\"nofollow\"></a> Array Change Detection</h2>\n<p>配列の変更に追随して、Vueは描画を更新する。<br>\n逆に言えばイミュータブルなメソッドの場合は、既存の配列に代入するような操作が必要になる。</p>\n<p>置き換えるとDOMが全て変更されるような感じもするけれど、そこはVueがよしなにやってくれるそう。</p>\n<h2 id=\"displaying-filtered%2Fsorted-results\"><a class=\"header-anchor-link\" href=\"#displaying-filtered%2Fsorted-results\" aria-hidden=\"true\" rel=\"nofollow\"></a> Displaying Filtered/Sorted Results</h2>\n<p>元の配列を維持したい場合は、computedを使いましょうと言う話</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-11T00:56:34Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152821580","id":1152821580,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5EtqlM","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152821580/reactions"},"updated_at":"2022-06-11T00:56:34Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152821580","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"https://vuejs.org/guide/essentials/event-handling.html\r\n\r\nキー修飾子はちゃんと見ておきたいかな\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n\r\n---\r\n\r\naliasってエリアス読みで訳すんだ。\r\n\r\n---\r\n\r\n終幕\r\n\r\n","bodyHTML":"<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fvuejs.org%2Fguide%2Fessentials%2Fevent-handling.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://vuejs.org/guide/essentials/event-handling.html\" style=\"display: none\" rel=\"nofollow\">https://vuejs.org/guide/essentials/event-handling.html</a></p>\n<p>キー修飾子はちゃんと見ておきたいかな</p>\n<p><div class=\"embed-zenn-link\"><iframe src=\"https://card.zenn.dev/?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FUI_Events%2FKeyboard_event_key_values\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\" style=\"display: none\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values</a></p>\n<hr>\n<p>aliasってエリアス読みで訳すんだ。</p>\n<hr>\n<p>終幕</p>\n","author_association":"OWNER","created_at":"2022-06-11T01:01:30Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/28#issuecomment-1152822696","id":1152822696,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/28","node_id":"IC_kwDOHWTPVs5Etq2o","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152822696/reactions"},"updated_at":"2022-06-11T01:01:30Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1152822696","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}