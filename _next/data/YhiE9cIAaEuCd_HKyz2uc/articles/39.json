{"pageProps":{"issue":{"body":"","bodyHTML":"","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39/comments","created_at":"2022-06-21T10:35:11Z","events_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39/events","html_url":"https://github.com/IkumaTadokoro/diary/issues/39","id":1278244782,"labels":[],"labels_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHWTPVs5MMHeu","number":39,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39/reactions"},"repository_url":"https://api.github.com/repos/IkumaTadokoro/diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39/timeline","title":"2022-06-21","updated_at":"2022-06-21T10:35:11Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},"issueComments":[{"body":"プロタイ 7章\n\n## 7.2 例外をスローする\n\n- カスタムエラークラスを実装することで「なぜ」失敗したのかを示すことができる\n- 自分の実装範囲外の関数でどんなエラーが発生するかを自分で見にいく必要がある。\n\n## 7.3 例外を返す\n\n- 戻り値に例外クラスをUnion型として定義することで、利用者は発生しうるすべての例外を処理する必要がある。\n- Unionが増えれば増えるほど、分岐も冗長になる。\n- あれ、このサンプル合ってるのかな？Errorでぜんぶ捕捉できるの？\n","bodyHTML":"<p>プロタイ 7章</p>\n<h2 id=\"7.2-%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%B9%E3%83%AD%E3%83%BC%E3%81%99%E3%82%8B\"><a class=\"header-anchor-link\" href=\"#7.2-%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%B9%E3%83%AD%E3%83%BC%E3%81%99%E3%82%8B\" aria-hidden=\"true\" rel=\"nofollow\"></a> 7.2 例外をスローする</h2>\n<ul>\n<li>カスタムエラークラスを実装することで「なぜ」失敗したのかを示すことができる</li>\n<li>自分の実装範囲外の関数でどんなエラーが発生するかを自分で見にいく必要がある。</li>\n</ul>\n<h2 id=\"7.3-%E4%BE%8B%E5%A4%96%E3%82%92%E8%BF%94%E3%81%99\"><a class=\"header-anchor-link\" href=\"#7.3-%E4%BE%8B%E5%A4%96%E3%82%92%E8%BF%94%E3%81%99\" aria-hidden=\"true\" rel=\"nofollow\"></a> 7.3 例外を返す</h2>\n<ul>\n<li>戻り値に例外クラスをUnion型として定義することで、利用者は発生しうるすべての例外を処理する必要がある。</li>\n<li>Unionが増えれば増えるほど、分岐も冗長になる。</li>\n<li>あれ、このサンプル合ってるのかな？Errorでぜんぶ捕捉できるの？</li>\n</ul>\n","author_association":"OWNER","created_at":"2022-06-21T12:20:41Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/39#issuecomment-1161674460","id":1161674460,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39","node_id":"IC_kwDOHWTPVs5FPb7c","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1161674460/reactions"},"updated_at":"2022-06-21T12:20:41Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1161674460","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}},{"body":"## v-modelの修飾子\n\n### Vue2系\n\n以下の3種類がある。\n\n- `.trim`：入力から空白を取り除く\n- `.number`：入力をnumberへ型キャストする。\n- `.lazy`：`input`イベントではなく、`change`イベントでイベントを発火する\n\n### Vue3系\n\n#### カスタム修飾子\n\n上記に加えて、カスタム修飾子が定義できるようになった。\n\n親コンポーネント\n\n```vue\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport MyVModelModifier from './components/MyVModelModifier.vue'\nconst text = ref('')\n</script>\n\n<template>\n  <MyVModelModifier v-model.capitalize=\"text\"></MyVModelModifier>\n  {{ text }}\n</template>\n```\n\n子コンポーネント\n\n```vue\n<template>\n  <input type=\"text\" :value=\"modelValue\" @input=\"emitValue\" />\n</template>\n\n<script setup>\nconst props = defineProps({\n  modelValue: String,\n  modelModifiers: { default: () => ({}) }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst emitValue = (e) => {\n  let value = e.target.value\n  if (props.modelModifiers.capitalize) {\n    value = value.charAt(0).toUpperCase() + value.slice(1)\n  }\n  emit('update:modelValue', value)\n}\n</script>\n```\n\n`v-model.modifier`の形式で記述すると、`modelModifiers`というpropが使用できるようになる。例えば`capitalize`をmodifierの位置にしているすると\n\n```vue\nmodelModifiers = {\n  capitalize: true\n}\n```\n\nという値が設定される。Vue側で提供するのはこのフラグ的な機能のみで、これを利用して実際にv-modelに紐づいたイベントで期待した処理を実装する。\n","bodyHTML":"<h2 id=\"v-model%E3%81%AE%E4%BF%AE%E9%A3%BE%E5%AD%90\"><a class=\"header-anchor-link\" href=\"#v-model%E3%81%AE%E4%BF%AE%E9%A3%BE%E5%AD%90\" aria-hidden=\"true\" rel=\"nofollow\"></a> v-modelの修飾子</h2>\n<h3 id=\"vue2%E7%B3%BB\"><a class=\"header-anchor-link\" href=\"#vue2%E7%B3%BB\" aria-hidden=\"true\" rel=\"nofollow\"></a> Vue2系</h3>\n<p>以下の3種類がある。</p>\n<ul>\n<li><code>.trim</code>：入力から空白を取り除く</li>\n<li><code>.number</code>：入力をnumberへ型キャストする。</li>\n<li><code>.lazy</code>：<code>input</code>イベントではなく、<code>change</code>イベントでイベントを発火する</li>\n</ul>\n<h3 id=\"vue3%E7%B3%BB\"><a class=\"header-anchor-link\" href=\"#vue3%E7%B3%BB\" aria-hidden=\"true\" rel=\"nofollow\"></a> Vue3系</h3>\n<h4 id=\"%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E4%BF%AE%E9%A3%BE%E5%AD%90\"><a class=\"header-anchor-link\" href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E4%BF%AE%E9%A3%BE%E5%AD%90\" aria-hidden=\"true\" rel=\"nofollow\"></a> カスタム修飾子</h4>\n<p>上記に加えて、カスタム修飾子が定義できるようになった。</p>\n<p>親コンポーネント</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> MyVModelModifier <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/MyVModelModifier.vue'</span>\n<span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MyVModelModifier</span> <span class=\"token attr-name\">v-model.capitalize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MyVModelModifier</span><span class=\"token punctuation\">></span></span>\n  {{ text }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p>子コンポーネント</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modelValue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emitValue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token function\">defineProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">modelValue</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">modelModifiers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> <span class=\"token function\">defineEmits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'update:modelValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">emitValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>modelModifiers<span class=\"token punctuation\">.</span>capitalize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update:modelValue'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre></div><p><code>v-model.modifier</code>の形式で記述すると、<code>modelModifiers</code>というpropが使用できるようになる。例えば<code>capitalize</code>をmodifierの位置にしているすると</p>\n<div class=\"code-block-container\"><pre class=\"language-html\"><code class=\"language-html\">modelModifiers = {\n  capitalize: true\n}\n</code></pre></div><p>という値が設定される。Vue側で提供するのはこのフラグ的な機能のみで、これを利用して実際にv-modelに紐づいたイベントで期待した処理を実装する。</p>\n","author_association":"OWNER","created_at":"2022-06-21T13:28:05Z","html_url":"https://github.com/IkumaTadokoro/diary/issues/39#issuecomment-1161749531","id":1161749531,"issue_url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/39","node_id":"IC_kwDOHWTPVs5FPuQb","performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1161749531/reactions"},"updated_at":"2022-06-21T13:28:05Z","url":"https://api.github.com/repos/IkumaTadokoro/diary/issues/comments/1161749531","user":{"avatar_url":"https://avatars.githubusercontent.com/u/61409641?v=4","events_url":"https://api.github.com/users/IkumaTadokoro/events{/privacy}","followers_url":"https://api.github.com/users/IkumaTadokoro/followers","following_url":"https://api.github.com/users/IkumaTadokoro/following{/other_user}","gists_url":"https://api.github.com/users/IkumaTadokoro/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/IkumaTadokoro","id":61409641,"login":"IkumaTadokoro","node_id":"MDQ6VXNlcjYxNDA5NjQx","organizations_url":"https://api.github.com/users/IkumaTadokoro/orgs","received_events_url":"https://api.github.com/users/IkumaTadokoro/received_events","repos_url":"https://api.github.com/users/IkumaTadokoro/repos","site_admin":false,"starred_url":"https://api.github.com/users/IkumaTadokoro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IkumaTadokoro/subscriptions","type":"User","url":"https://api.github.com/users/IkumaTadokoro"}}]},"__N_SSG":true}